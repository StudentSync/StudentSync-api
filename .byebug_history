continue
quit
if teste;
if teste puts eae
if teste
teste
teste = User.find_by(email: user_params[:email])
user_params[:password].length >= 6
user_params[:password].length > 6
user_params[:password] > 6
user_params[:password]
continue
user.failure[:error]
user.failure.error
user.failure
user.failure?
user
continue
user
user.success
continue
user
user.success
continue
token.access_token
token = user.success
user.success?
user.to_h
user
user[:access_token]
user.acess_token
user
continue
user.call
user
continue
quit
user_params
continue
b
pass
context.user_params.to_h
context.user_params
context.user_params.params
context.user_params.all
context.user_params()
context.user_params[all]
context.user_params[:all]
context.user_params[]
context.user_params[:email]
context.user_params
user_params
quit
context.user_params
teste.call
teste =Devise::Api::ResourceOwnerService::SignUp.new(params: {email:"mattheeeeusgoii@gmail.com", password: "123456"}, resource_class: User)
Devise::Api::ResourceOwnerService::SignUp.new(params: context.user_params, resource_class: User)
user_params
delegate :user_params, to: :context
context.user_params
quit
token
quit
JSON.parse(response.body)["token"]
JSON.parse(response.body).token
JSON.parse(response.body)
response.body
response.body[:token]
response.body["token"]
response.body.token
response.body
response
quit
user[:email]
quit
user[:email]
user[:email
existing_user[:email]
FactoryBot.create(:user)
create(:user)
quit
user
quit
user.email
user
quit
:user.email
user.email
user
quit
qquit
teste.user
teste
quit
teste.user
teste
quit
qquit
professor
:professor
professor
